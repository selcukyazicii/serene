{
  "version": 3,
  "sources": ["../../../../../../Modules/Membership/Account/Login/LoginPage.ts"],
  "sourcesContent": ["import { LoginForm, LoginRequest } from \"@/ServerTypes/Membership\";\r\nimport { Texts } from \"@/ServerTypes/Texts\";\r\nimport { PropertyPanel } from \"@serenity-is/corelib\";\r\nimport { ErrorHandling, isEmptyOrNull, notifyError, parseQueryString, resolveUrl, serviceCall, ServiceResponse, localText, htmlEncode } from \"@serenity-is/corelib/q\";\r\n\r\n$(function () {\r\n    var loginPanel = new LoginPanel($('#LoginPanel')).init();\r\n    loginPanel.element.find('.forgot-password').appendTo('.field.Password');\r\n\r\n    if ((document.getElementById('IsPublicDemo') as HTMLInputElement)?.value) {\r\n        loginPanel[\"byId\"]('Username').val('admin').attr('placeholder', 'admin')\r\n        loginPanel[\"byId\"]('Password').val('serenity').attr('placeholder', 'serenity');\r\n    }\r\n\r\n    if ((document.getElementById('Activated') as HTMLInputElement)?.value) {\r\n        loginPanel[\"byId\"]('Username').val((document.getElementById('Activated') as HTMLInputElement)?.value);\r\n        loginPanel[\"byId\"]('Password').focus();\r\n    }\r\n});\r\n\r\nclass LoginPanel extends PropertyPanel<LoginRequest, any> {\r\n\r\n    protected getFormKey() { return LoginForm.formKey; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n\r\n        this.byId('LoginButton').click(e => {\r\n            e.preventDefault();\r\n\r\n            if (!this.validateForm())\r\n                return;\r\n\r\n            var request = this.getSaveEntity();\r\n\r\n            serviceCall({\r\n                url: resolveUrl('~/Account/Login'),\r\n                request: request,\r\n                onSuccess: () => {\r\n                    this.redirectToReturnUrl();\r\n                },\r\n                onError: (response: ServiceResponse) => {\r\n                    if (response != null && response.Error != null && response.Error.Code == \"RedirectUserTo\") {\r\n                        window.location.href = response.Error.Arguments;\r\n                        return;\r\n                    }\r\n\r\n                    if (response != null && response.Error != null && !isEmptyOrNull(response.Error.Message)) {\r\n                        notifyError(response.Error.Message);\r\n                        $('#Password').focus();\r\n\r\n                        return;\r\n                    }\r\n\r\n                    ErrorHandling.showServiceError(response.Error);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    protected redirectToReturnUrl() {\r\n        var q = parseQueryString();\r\n        var returnUrl = q['returnUrl'] || q['ReturnUrl'];\r\n        if (returnUrl) {\r\n            var hash = window.location.hash;\r\n            if (hash != null && hash != '#')\r\n                returnUrl += hash;\r\n            window.location.href = returnUrl;\r\n        }\r\n        else {\r\n            window.location.href = resolveUrl('~/');\r\n        }\r\n    }\r\n\r\n    protected getTemplate() {\r\n        return `\r\n<h2 class=\"text-center p-4\">\r\n    <img src=\"${resolveUrl(\"~/Content/site/images/serenity-logo-w-128.png\")}\"\r\n        class=\"rounded-circle p-1\" style=\"background-color: var(--s-sidebar-band-bg)\"\r\n        width=\"50\" height=\"50\" /> serene\r\n</h2>\r\n\r\n<div class=\"s-Panel p-4\">\r\n    <h5 class=\"text-center my-4\">${htmlEncode(Texts.Forms.Membership.Login.LoginToYourAccount)}</h5>\r\n    <form id=\"~_Form\" action=\"\">\r\n        <div id=\"~_PropertyGrid\"></div>\r\n        <div class=\"px-field\">\r\n            <a class=\"float-end text-decoration-none\" href=\"${resolveUrl('~/Account/ForgotPassword')}\">\r\n                ${htmlEncode(Texts.Forms.Membership.Login.ForgotPassword)}\r\n            </a>\r\n        </div>\r\n        <div class=\"px-field\">\r\n            <button id=\"~_LoginButton\" type=\"submit\" class=\"btn btn-primary my-3 w-100\">\r\n                ${htmlEncode(Texts.Forms.Membership.Login.SignInButton)}\r\n            </button>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<div class=\"text-center mt-2\">\r\n    <a class=\"text-decoration-none\" href=\"${resolveUrl('~/Account/SignUp')}\">${htmlEncode(localText(\"Forms.Membership.Login.SignUpButton\"))}</a>\r\n</div>   \r\n`;\r\n    }\r\n}"],
  "mappings": "yLAEA,IAAAA,EAA8B,SAC9BC,EAA6I,SAE7I,EAAE,UAAY,CALd,IAAAC,EAAAC,EAAAC,EAMI,IAAIC,EAAa,IAAIC,EAAW,EAAE,aAAa,CAAC,EAAE,KAAK,EACvDD,EAAW,QAAQ,KAAK,kBAAkB,EAAE,SAAS,iBAAiB,GAEjEH,EAAA,SAAS,eAAe,cAAc,IAAtC,MAAAA,EAA8D,QAC/DG,EAAW,KAAQ,UAAU,EAAE,IAAI,OAAO,EAAE,KAAK,cAAe,OAAO,EACvEA,EAAW,KAAQ,UAAU,EAAE,IAAI,UAAU,EAAE,KAAK,cAAe,UAAU,IAG5EF,EAAA,SAAS,eAAe,WAAW,IAAnC,MAAAA,EAA2D,QAC5DE,EAAW,KAAQ,UAAU,EAAE,KAAKD,EAAA,SAAS,eAAe,WAAW,IAAnC,YAAAA,EAA2D,KAAK,EACpGC,EAAW,KAAQ,UAAU,EAAE,MAAM,EAE7C,CAAC,EAED,IAAMC,EAAN,cAAyB,eAAiC,CAE5C,YAAa,CAAE,OAAOC,EAAU,OAAS,CAEnD,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,EAEf,KAAK,KAAK,aAAa,EAAE,MAAMC,GAAK,CAGhC,GAFAA,EAAE,eAAe,EAEb,EAAC,KAAK,aAAa,EAGvB,KAAIC,EAAU,KAAK,cAAc,KAEjC,eAAY,CACR,OAAK,cAAW,iBAAiB,EACjC,QAASA,EACT,UAAW,IAAM,CACb,KAAK,oBAAoB,CAC7B,EACA,QAAUC,GAA8B,CACpC,GAAIA,GAAY,MAAQA,EAAS,OAAS,MAAQA,EAAS,MAAM,MAAQ,iBAAkB,CACvF,OAAO,SAAS,KAAOA,EAAS,MAAM,UACtC,MACJ,CAEA,GAAIA,GAAY,MAAQA,EAAS,OAAS,MAAQ,IAAC,iBAAcA,EAAS,MAAM,OAAO,EAAG,IACtF,eAAYA,EAAS,MAAM,OAAO,EAClC,EAAE,WAAW,EAAE,MAAM,EAErB,MACJ,CAEA,gBAAc,iBAAiBA,EAAS,KAAK,CACjD,CACJ,CAAC,EACL,CAAC,CACL,CAEU,qBAAsB,CAC5B,IAAIC,KAAI,oBAAiB,EACrBC,EAAYD,EAAE,WAAgBA,EAAE,UACpC,GAAIC,EAAW,CACX,IAAIC,EAAO,OAAO,SAAS,KACvBA,GAAQ,MAAQA,GAAQ,MACxBD,GAAaC,GACjB,OAAO,SAAS,KAAOD,CAC3B,MAEI,OAAO,SAAS,QAAO,cAAW,IAAI,CAE9C,CAEU,aAAc,CACpB,MAAO;AAAA;AAAA,mBAEC,cAAW,+CAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAMvC,cAAWE,EAAM,MAAM,WAAW,MAAM,kBAAkB;AAAA;AAAA;AAAA;AAAA,iEAI/B,cAAW,0BAA0B;AAAA,qBACjF,cAAWA,EAAM,MAAM,WAAW,MAAM,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKtD,cAAWA,EAAM,MAAM,WAAW,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAO1B,cAAW,kBAAkB,SAAM,iBAAW,aAAU,qCAAqC,CAAC;AAAA;AAAA,CAGtI,CACJ,EApFMC,EAAAV,EAAA",
  "names": ["import_corelib", "import_q", "_a", "_b", "_c", "loginPanel", "LoginPanel", "LoginForm", "container", "e", "request", "response", "q", "returnUrl", "hash", "Texts", "__name"]
}
